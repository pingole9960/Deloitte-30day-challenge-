6. Sort Words Based on Embedded Numbers

Problem Statement:

A peculiar list of words has been found, where each word contains an embedded number

indicating its position in the correct order. Your task is to rearrange the words in the correct order

based on these embedded numbers. For example, "is2" and "Th1is" should be placed in the

correct sequence based on their numbers. Can you sort the list and reveal the correct sequence

of words?

Constraints:

● The length of the list is 1≤n≤1000

● Each word contains exactly one digit indicating its position (1-9).Sample Input:

["is2", "a3", "Th1is"]

Sample Output:

This is a

Explanation:

The word "This" contains 1, so it comes first, followed by "is" and then "a".
import java.util.Arrays;


public class Main {
	public static void main(String[] args) {
        String str="is2,a3,Th1is";
        String[] words=str.split(",");
        String ans="";
        String[] sorted=new String[10];
        for(String word:words)
        {
        	for(char ch:word.toCharArray()){
        	 		       if (Character.isDigit(ch)) {
          		
                			int pos=ch-'0';
                			sorted[pos]=word;
                			break;
        	 		       }
        	       }
                }

  for(int i=1;i<10;i++){
        	if(sorted[i]!=null){
for (char ch : sorted[i].toCharArray()) {
    if (!Character.isDigit(ch)) {
        System.out.print(ch); 
       }	
}
       System.out.print(" ");
  }
}


          	
	}
}
